name: Continuous Integration
env:
  PROJECT_ID: slalom-2020-293920
  GAR_LOCATION: us-west1
  REPOSITORY: reimagined-couscous
  IMAGE: svelaine
  TAG_COMMIT: $GITHUB_SHA
  TAG_LATEST: latest

on:
  pull_request:
    branches:
      - development
  push:
    branches:
      - development
  workflow_dispatch:

jobs:
  tests:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Tests
        run: |
          echo Here we will run some tests,
          echo Results of the tests.

  login-build-push-development:
    name: Docker login, build, and push
    needs: tests
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: "Docker build current version"
        run: |-
          docker build \
            --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$TAG_COMMIT" \
            app/
      - name: "Docker build latest version"
        run: |-
          docker build \
            --tag "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$TAG_LATEST" \
            app/

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v0.6.0"
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"
          token_format: "access_token"

      - uses: "docker/login-action@v1"
        name: "Docker login"
        with:
          registry: "${{ env.GAR_LOCATION }}-docker.pkg.dev"
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"

      - name: "Docker push"
        run: |-
          docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$REPOSITORY/$IMAGE:$GITHUB_SHA"

  build:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Building Docker Image
        run: |
          echo Building Docker Image with version tag...

  push:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Push Docker Image to Artifact Registry
        run: |
          echo Pushing Docker Image to Artifact Registry with tags: commit and latest

  deploy:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: push
    steps:
      - name: Deploy application to GCP Cloud Run
        run: |
          echo Deploying to Cloud Run
